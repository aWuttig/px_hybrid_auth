<?php
namespace Portrino\PxHybridAuth\Hybrid\Providers;

/***************************************************************
 *  Copyright notice
 *
 *  (c) 2016 Andre Wuttig <wuttig@portrino.de>, portrino GmbH
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

use Portrino\PxHybridAuth\Hybrid\User;

/**
 * Class PxHybridAuth_Providers_Facebook
 *
 * @package Portrino\PxHybridAuth\Hybrid\Providers
 */
class Facebook extends \Hybrid_Providers_Facebook
{

    /**
     * Common providers adapter constructor
     *
     * @param Numeric /String $providerId
     * @param array $config
     * @param array $params
     */
    function __construct($providerId, $config, $params = null)
    {
        parent::__construct($providerId, $config, $params); // TODO: Change the autogenerated stub
        $this->user = new User();
    }

    /**
     * extends the user profile with photo url in better resolution
     */
    function getUserProfile()
    {

        parent::getUserProfile();

        if ($this->user && $this->user->profile && $this->user->profile->identifier) {
            $photoJsonUri = "https://graph.facebook.com/" . $this->user->profile->identifier . "/picture?width=350&height=350&redirect=false";

            $curl_handle = curl_init();

            curl_setopt($curl_handle, CURLOPT_URL, $photoJsonUri);
            curl_setopt($curl_handle, CURLOPT_CONNECTTIMEOUT, 2);
            curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($curl_handle, CURLOPT_USERAGENT, 'PxHybridAuth');

            $photoJson = curl_exec($curl_handle);
            $photoJsonObj = json_decode($photoJson);

            if (isset($photoJsonObj->data->url)) {
                $this->user->profile->photoURL = $photoJsonObj->data->url;
            }
        }

        return $this->user->profile;
    }
}
